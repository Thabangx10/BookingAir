{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { createStore } from 'vuex';\nconst newLocal = 'https://volunteerventures.onrender.com/';\nconst bStoreURL = newLocal;\nexport default createStore({\n  state: {\n    user: null,\n    message: null,\n    loading: false,\n    users: [],\n    programs: [],\n    flights: [],\n    bookedFlights: []\n  },\n  mutations: {\n    bookFlight(state, flight) {\n      state.bookedFlights.push(flight);\n    },\n    setBookedFlight(state, flight) {\n      state.bookedFlight = flight;\n    },\n    addToCart(state, flight) {\n      state.cart.push(flight);\n    },\n    removeFromCart(state, flight) {\n      state.cart = state.cart.filter(f => f !== flight);\n    },\n    // removeFlight(state, index) {\n    //   state.bookedFlights.splice(index, 1);\n    // },\n    setLoading(state, loading) {\n      state.loading = loading;\n    },\n    setUser(state, payload) {\n      state.user = payload;\n    },\n    setMessage(state, payload) {\n      state.message = payload;\n    },\n    // --------------------------Booking----------------------------------\n    setBooking(state, value) {\n      state.booking = value;\n    },\n    setBookings(state, values) {\n      state.bookings = values;\n    },\n    // ---------------------User---------------------------------------\n    setUsers(state, users) {\n      state.users = users;\n    },\n    addUser(state, users) {\n      state.users = users;\n    },\n    updateUser(state, payload) {\n      state.users = state.users.map(user => {\n        if (user.id === payload.id) {\n          return payload;\n        }\n        return user;\n      });\n    },\n    deleteUser(state, id) {\n      state.users = state.users.filter(user => user.id !== id);\n    },\n    // --------------------------------Program----------------------------------\n    setPrograms(state, programs) {\n      state.programs = programs;\n    },\n    setProgram(state, program) {\n      state.program = program;\n    },\n    addProgram(state, programs) {\n      state.programs = programs;\n    },\n    updateProgram(state, payload) {\n      state.programs = state.programs.map(program => {\n        if (program.id === payload.id) {\n          return payload;\n        }\n        return program;\n      });\n    },\n    deleteProgram(state, id) {\n      state.programs = state.programs.filter(program => program.id !== id);\n    },\n    // --------------------------FLIGHTS----------------------------------------------\n    setFlights(state, flights) {\n      state.flights = flights;\n    },\n    // setFlight (state, flight) {\n    //   state.flight = flight;\n    // },\n    addFlight(state, flights) {\n      state.flights = flights;\n    },\n    setFlight(state, payload) {\n      state.flights = state.flights.map(flight => {\n        if (flight.id === payload.id) {\n          return payload;\n        }\n        return flight;\n      });\n    },\n    deleteFlight(state, id) {\n      state.flights = state.flights.filter(flight => flight.id !== id);\n    }\n  },\n  // ------------------------------------------REGISTER/LOGIN-----------------------------------------------------\n  actions: {\n    // removeFlight({ commit, state }, flight) {\n    //   const index = state.bookedFlights.indexOf(flight);\n    //   if (index !== -1) {\n    //     commit('removeFlight', index);\n    //   }\n    // },\n    async register(context, payload) {\n      console.log(payload);\n      const res = await axios.post(`${bStoreURL}register`, payload);\n      const {\n        result,\n        err,\n        msg\n      } = await res.data;\n      if (result) {\n        context.commit('setUser', result);\n        context.commit('setMessage', msg);\n      } else {\n        context.commit('setMessage', err);\n      }\n    },\n    async login(context, payload) {\n      console.log(payload);\n      const res = await axios.post(`${bStoreURL}login`, payload);\n      const {\n        result,\n        err,\n        msg\n      } = await res.data;\n      if (result) {\n        context.commit('setUser', result);\n        localStorage.setItem(\"user\", JSON.stringify(result));\n        context.commit('setMessage', msg);\n      } else {\n        context.commit('setMessage', err);\n      }\n      context.commit('setLoading', false);\n    },\n    // --------------------------------------------USERS--------------------------------------------------------------\n    async retrieveUsers(context) {\n      const res = await axios.get(`${bStoreURL}users`);\n      const {\n        results,\n        err,\n        msg\n      } = await res.data;\n      if (results) {\n        context.commit('setUsers', results);\n      } else {\n        context.commit('setMessage', err || msg);\n      }\n    },\n    async retrieveUser(context, id) {\n      const res = await axios.get(`${bStoreURL}user/${id}`);\n      const {\n        results\n      } = await res.data;\n      if (results) {\n        console.log(results[0]);\n        context.commit('setUser', results[0]);\n      }\n    },\n    // async addUser(context, payload) {\n    //   const res = await axios.post(`${bStoreURL}register`, payload);\n    //   const { result, err, msg } = await res.data;\n    //   if (result) {\n    //     context.commit('updateUser', result);\n    //     context.commit('setMessage', msg)\n    //   } else {\n    //     context.commit('setMessage', err)\n    //   }\n    // },\n    async updateUser(context, payload) {\n      try {\n        const res = await axios.put(`${bStoreURL}user/${payload.ID}`, payload);\n        const {\n          result,\n          err,\n          msg\n        } = await res.data;\n        if (result) {\n          context.commit('updateUser', result);\n          context.commit('setMessage', msg);\n        } else {\n          context.commit('setMessage', err);\n        }\n      } catch (error) {\n        console.error(error);\n        context.commit('setMessage', 'Error updating user');\n      }\n    },\n    async deleteUser(context, id) {\n      try {\n        const res = await axios.delete(`${bStoreURL}user/${id}`);\n        const {\n          err,\n          msg\n        } = await res.data;\n        if (msg) {\n          context.dispatch('retrieveUsers');\n          context.commit('setMessage', msg);\n          // window.location.reload(); \n        } else {\n          context.commit('setMessage', err);\n        }\n      } catch (err) {\n        context.commit('setMessage', err.message);\n      }\n    },\n    // --------------------------------------------PROGRAMS------------------------------------------------------\n    async fetchPrograms(context) {\n      const res = await axios.get(`${bStoreURL}programs`);\n      const {\n        results,\n        err,\n        msg\n      } = await res.data;\n      if (results) {\n        context.commit('setPrograms', results);\n      } else {\n        context.commit('setMessage', err || msg);\n      }\n    },\n    async fetchProgram(context, id) {\n      const res = await axios.get(`${bStoreURL}program/${id}`);\n      const {\n        results\n      } = await res.data;\n      if (results) {\n        console.log(results[0]);\n        context.commit('setProgram', results[0]);\n      }\n    },\n    async addProgram(context, payload) {\n      const res = await axios.post(`${bStoreURL}program`, payload);\n      const {\n        result,\n        err,\n        msg\n      } = await res.data;\n      if (result) {\n        context.commit('updateProgram', result);\n        context.commit('setMessage', msg);\n      } else {\n        context.commit('setMessage', err);\n      }\n    },\n    async updateProgram(context, payload) {\n      try {\n        const res = await axios.put(`${bStoreURL}program/${payload.ID}`, payload);\n        const {\n          err,\n          msg\n        } = await res.data;\n        if (msg) {\n          // context.commit('updateProgram', result);\n          context.dispatch('retrievePrograms');\n          context.commit('setMessage', msg);\n        } else {\n          context.commit('setMessage', err);\n        }\n      } catch (error) {\n        console.error(error);\n        context.commit('setMessage', 'Error updating program');\n      }\n    },\n    async deleteProgram(context, id) {\n      try {\n        const res = await axios.delete(`${bStoreURL}program/${id}`);\n        const {\n          err,\n          msg\n        } = await res.data;\n        if (msg) {\n          // context.commit('deleteProgram', id);\n          context.dispatch('fetchPrograms');\n          context.commit('setMessage', msg);\n          // window.location.reload(); \n        } else {\n          context.commit('setMessage', err);\n        }\n      } catch (err) {\n        context.commit('setMessage', err.message);\n      }\n    },\n    // ---------------------------------------------------FLIGHTS--------------------------------------------------\n\n    async fetchFlights(context) {\n      const res = await axios.get(`${bStoreURL}flights`);\n      const {\n        results,\n        err,\n        msg\n      } = await res.data;\n      if (results) {\n        context.commit('setFlights', results);\n      } else {\n        context.commit('setMessage', err || msg);\n      }\n    },\n    async fetchFlight(context, id) {\n      const res = await axios.get(`${bStoreURL}flight/${id}`);\n      const {\n        results\n      } = await res.data;\n      if (results) {\n        console.log(results[0]);\n        context.commit('setFlights', results[0]);\n      }\n    },\n    async addFlight(context, payload) {\n      const res = await axios.post(`${bStoreURL}flight`, payload);\n      const {\n        result,\n        err,\n        msg\n      } = await res.data;\n      if (result) {\n        context.commit('updateFlight', result);\n        context.commit('setMessage', msg);\n      } else {\n        context.commit('setMessage', err);\n      }\n    },\n    async updateFlight(context, payload) {\n      try {\n        console.log(\"Flight object: \", payload);\n        const res = await axios.put(`${bStoreURL}flight/${payload.ID}`, payload);\n        console.log(\"response - backend: \", res);\n        const {\n          err,\n          msg\n        } = await res.data;\n        if (msg) {\n          context.dispatch('fetchFlights');\n          context.commit('setMessage', msg);\n        } else {\n          context.commit('setMessage', err);\n        }\n      } catch (error) {\n        console.error(error);\n        context.commit('setMessage', 'Error updating flight');\n      }\n    },\n    async deleteFlight(context, id) {\n      try {\n        const res = await axios.delete(`${bStoreURL}flight/${id}`);\n        const {\n          err,\n          msg\n        } = await res.data;\n        if (msg) {\n          context.dispatch('fetchFlights');\n          context.commit('setMessage', msg);\n          // window.location.reload(); \n        } else {\n          context.commit('setMessage', err);\n        }\n      } catch (err) {\n        context.commit('setMessage', err.message);\n      }\n    },\n    // ---------------------------------Bookings----------------------------------------------\n\n    async bookFlight(context, payload) {\n      try {\n        let statusCode = null;\n        let message = null;\n        await axios.post(`${bStoreURL}user/${payload.ID}/booking`, payload).then(data => {\n          statusCode = data.status;\n          message = data;\n        }).then(() => {\n          console.log('Response: ', statusCode);\n          context.commit('setMessage', message.data.msg);\n        });\n      } catch (err) {\n        context.commit('setMessage', err);\n      }\n    },\n    async updateBooking(context, payload) {\n      try {\n        let res = await axios.put(`${bStoreURL}user/${payload.ID}/cart/${payload.ID}`, {\n          quantity: payload.quantity\n        });\n        let {\n          msg\n        } = res.data;\n        if (res) {\n          console.log('Message: ', msg);\n          context.commit('setMessage', msg);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    async retrieveBookings(context) {\n      let currentUser = JSON.parse(localStorage.getItem('user'));\n      try {\n        const res = await axios.get(`${bStoreURL}user/${currentUser?.ID}/bookings`);\n        context.commit('SetBooking', res.data.results);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  },\n  getters: {\n    getUser: state => state.user,\n    getMessage: state => state.message,\n    getUsers: state => state.users,\n    getPrograms: state => state.programs,\n    getFlights: state => state.flights,\n    authenticated(state) {\n      return state.user !== null;\n    },\n    flights(state) {\n      return state.flights;\n    },\n    bookedFlights(state) {\n      return state.bookedFlights;\n    },\n    totalCost: state => {\n      let total = 0;\n      for (const flight of state.bookedFlights) {\n        total += flight.Price;\n      }\n      return total;\n    }\n  }\n});","map":{"version":3,"names":["axios","createStore","newLocal","bStoreURL","state","user","message","loading","users","programs","flights","bookedFlights","mutations","bookFlight","flight","push","setBookedFlight","bookedFlight","addToCart","cart","removeFromCart","filter","f","setLoading","setUser","payload","setMessage","setBooking","value","booking","setBookings","values","bookings","setUsers","addUser","updateUser","map","id","deleteUser","setPrograms","setProgram","program","addProgram","updateProgram","deleteProgram","setFlights","addFlight","setFlight","deleteFlight","actions","register","context","console","log","res","post","result","err","msg","data","commit","login","localStorage","setItem","JSON","stringify","retrieveUsers","get","results","retrieveUser","put","ID","error","delete","dispatch","fetchPrograms","fetchProgram","fetchFlights","fetchFlight","updateFlight","statusCode","then","status","updateBooking","quantity","retrieveBookings","currentUser","parse","getItem","getters","getUser","getMessage","getUsers","getPrograms","getFlights","authenticated","totalCost","total","Price"],"sources":["C:/Users/Thabang/BookingAir/ui/src/store/index.js"],"sourcesContent":["import axios from 'axios';\r\nimport { createStore } from 'vuex'\r\nconst newLocal = 'https://volunteerventures.onrender.com/';\r\nconst bStoreURL = newLocal\r\n\r\nexport default createStore({\r\n  state: {\r\n    user: null,\r\n    message: null,\r\n    loading: false,\r\n    users: [],\r\n    programs: [],\r\n    flights: [],\r\n    bookedFlights: [],\r\n    \r\n  },\r\n  mutations: {\r\n\r\n    bookFlight(state, flight) {\r\n      state.bookedFlights.push(flight);\r\n    },\r\n    setBookedFlight(state, flight) {\r\n      state.bookedFlight = flight;\r\n    },\r\n    addToCart(state, flight) {\r\n      state.cart.push(flight);\r\n    },\r\n    removeFromCart(state, flight) {\r\n      state.cart = state.cart.filter(f => f !== flight);\r\n    },\r\n    \r\n    // removeFlight(state, index) {\r\n    //   state.bookedFlights.splice(index, 1);\r\n    // },\r\n    setLoading(state, loading) {\r\n      state.loading = loading\r\n    },\r\n    setUser (state, payload) {\r\n      state.user = payload\r\n    },\r\n    setMessage (state, payload) {\r\n      state.message = payload\r\n    },\r\n\r\n// --------------------------Booking----------------------------------\r\n    setBooking(state, value) {\r\n      state.booking = value\r\n    },\r\n    setBookings(state, values) {\r\n      state.bookings = values\r\n    },\r\n    // ---------------------User---------------------------------------\r\n    setUsers (state, users) {\r\n      state.users = users;\r\n    },\r\n    addUser(state, users) {\r\n      state.users = users;\r\n    },\r\n    updateUser(state, payload) {\r\n      state.users = state.users.map(user => {\r\n        if (user.id === payload.id) {\r\n          return payload;\r\n        }\r\n        return user;\r\n      });\r\n    },\r\n    deleteUser(state, id) {\r\n      state.users = state.users.filter(user => user.id !== id);\r\n    },\r\n\r\n    // --------------------------------Program----------------------------------\r\n    setPrograms (state, programs) {\r\n      state.programs = programs;\r\n    },\r\n    setProgram (state, program) {\r\n      state.program = program;\r\n    },\r\n    addProgram(state, programs) {\r\n      state.programs = programs;\r\n    },\r\n    updateProgram(state, payload) {\r\n      state.programs = state.programs.map(program => {\r\n        if (program.id === payload.id) {\r\n          return payload;\r\n        }\r\n        return program;\r\n      });\r\n    },\r\n    deleteProgram(state, id) {\r\n      state.programs = state.programs.filter(program => program.id !== id);\r\n    },\r\n\r\n\r\n    // --------------------------FLIGHTS----------------------------------------------\r\n    setFlights (state, flights) {\r\n      state.flights = flights;\r\n    },\r\n    // setFlight (state, flight) {\r\n    //   state.flight = flight;\r\n    // },\r\n    addFlight(state, flights) {\r\n      state.flights = flights;\r\n    },\r\n    setFlight(state, payload) {\r\n      state.flights = state.flights.map(flight => {\r\n        if (flight.id === payload.id) {\r\n          return payload;\r\n        }\r\n        return flight;\r\n      });\r\n    },\r\n    deleteFlight(state, id) {\r\n      state.flights = state.flights.filter(flight => flight.id !== id);\r\n    }\r\n  },\r\n\r\n\r\n    // ------------------------------------------REGISTER/LOGIN-----------------------------------------------------\r\n    actions: {\r\n      // removeFlight({ commit, state }, flight) {\r\n      //   const index = state.bookedFlights.indexOf(flight);\r\n      //   if (index !== -1) {\r\n      //     commit('removeFlight', index);\r\n      //   }\r\n      // },\r\n    async register (context, payload) {\r\n      console.log(payload);\r\n      const res = await axios.post(`${bStoreURL}register`, payload)\r\n      const { result, err, msg } = await res.data\r\n      if (result) {\r\n        context.commit('setUser', result)\r\n        context.commit('setMessage', msg)\r\n      } else {\r\n        context.commit('setMessage', err)\r\n      }\r\n    },\r\n\r\n  async login (context, payload) {\r\n    console.log(payload);\r\n    const res = await axios.post(`${bStoreURL}login`, payload)\r\n    const { result, err, msg } = await res.data\r\n    if (result) {\r\n      context.commit('setUser', result)\r\n      localStorage.setItem(\"user\", JSON.stringify(result))\r\n      context.commit('setMessage', msg)\r\n    } else {\r\n      context.commit('setMessage', err)\r\n    }\r\n    context.commit('setLoading', false);\r\n  },\r\n\r\n  // --------------------------------------------USERS--------------------------------------------------------------\r\n  async retrieveUsers(context) {\r\n    const res = await axios.get(`${bStoreURL}users`);\r\n    const { results, err, msg } = await res.data;\r\n    if(results) {\r\n      context.commit('setUsers', results)\r\n    }else {\r\n      context.commit('setMessage', err || msg)\r\n    }\r\n  },\r\n  async retrieveUser(context, id) {\r\n    const res = await axios.get(`${bStoreURL}user/${id}`);\r\n    const { results } = await res.data;\r\n    if(results) {\r\n      console.log(results[0])\r\n      context.commit('setUser', results[0]);\r\n    }\r\n  },\r\n  // async addUser(context, payload) {\r\n  //   const res = await axios.post(`${bStoreURL}register`, payload);\r\n  //   const { result, err, msg } = await res.data;\r\n  //   if (result) {\r\n  //     context.commit('updateUser', result);\r\n  //     context.commit('setMessage', msg)\r\n  //   } else {\r\n  //     context.commit('setMessage', err)\r\n  //   }\r\n  // },\r\n  async updateUser(context, payload) {\r\n    try {\r\n      const res = await axios.put(`${bStoreURL}user/${payload.ID}`, payload);\r\n      const { result, err, msg } = await res.data;\r\n      if (result) {\r\n        context.commit('updateUser', result);\r\n        context.commit('setMessage', msg)\r\n      } else {\r\n        context.commit('setMessage', err)\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      context.commit('setMessage', 'Error updating user');\r\n    }\r\n  },\r\n  \r\n  async deleteUser(context, id) {\r\n    try {\r\n      const res = await axios.delete(`${bStoreURL}user/${id}`);\r\n      const { err, msg } = await res.data;\r\n      if (msg) {\r\n        context.dispatch('retrieveUsers');\r\n        context.commit('setMessage', msg);\r\n        // window.location.reload(); \r\n      } else {\r\n        context.commit('setMessage', err)\r\n      }\r\n    } catch (err) {\r\n      context.commit('setMessage', err.message);\r\n    }\r\n  },\r\n\r\n\r\n\r\n  // --------------------------------------------PROGRAMS------------------------------------------------------\r\n  async fetchPrograms(context) {\r\n      const res = await axios.get(`${bStoreURL}programs`);\r\n      const { results, err, msg } = await res.data;\r\n      if(results) {\r\n        context.commit('setPrograms', results)\r\n      }else {\r\n        context.commit('setMessage', err || msg)\r\n      }\r\n    },\r\n    async fetchProgram(context, id) {\r\n      const res = await axios.get(`${bStoreURL}program/${id}`);\r\n      const { results } = await res.data;\r\n      if(results) {\r\n        console.log(results[0])\r\n        context.commit('setProgram', results[0]);\r\n      }\r\n    },\r\n    async addProgram(context, payload) {\r\n      const res = await axios.post(`${bStoreURL}program`, payload);\r\n      const { result, err, msg } = await res.data;\r\n      if (result) {\r\n        context.commit('updateProgram', result);\r\n        context.commit('setMessage', msg)\r\n      } else {\r\n        context.commit('setMessage', err)\r\n      }\r\n    },\r\n    async updateProgram(context, payload) {\r\n      try {\r\n        const res = await axios.put(`${bStoreURL}program/${payload.ID}`, payload);\r\n        const { err, msg } = await res.data;\r\n        if (msg) {\r\n          // context.commit('updateProgram', result);\r\n          context.dispatch('retrievePrograms');\r\n          context.commit('setMessage', msg)\r\n        } else {\r\n          context.commit('setMessage', err)\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        context.commit('setMessage', 'Error updating program');\r\n      }\r\n    },\r\n    \r\n    async deleteProgram(context, id) {\r\n      try {\r\n        const res = await axios.delete(`${bStoreURL}program/${id}`);\r\n        const { err, msg } = await res.data;\r\n        if (msg) {\r\n          // context.commit('deleteProgram', id);\r\n          context.dispatch('fetchPrograms');\r\n          context.commit('setMessage', msg);\r\n          // window.location.reload(); \r\n        } else {\r\n          context.commit('setMessage', err)\r\n        }\r\n      } catch (err) {\r\n        context.commit('setMessage', err.message);\r\n      }\r\n    },\r\n\r\n\r\n\r\n  // ---------------------------------------------------FLIGHTS--------------------------------------------------\r\n\r\n  async fetchFlights(context) {\r\n    const res = await axios.get(`${bStoreURL}flights`);\r\n    const { results, err, msg } = await res.data;\r\n    if(results) {\r\n      context.commit('setFlights', results)\r\n    }else {\r\n      context.commit('setMessage', err || msg)\r\n    }\r\n  },\r\n  async fetchFlight(context, id) {\r\n    const res = await axios.get(`${bStoreURL}flight/${id}`);\r\n    const { results } = await res.data;\r\n    if(results) {\r\n      console.log(results[0])\r\n      context.commit('setFlights', results[0]);\r\n    }\r\n  },\r\n  async addFlight(context, payload) {\r\n    const res = await axios.post(`${bStoreURL}flight`, payload);\r\n    const { result, err, msg } = await res.data;\r\n    if (result) {\r\n      context.commit('updateFlight', result);\r\n      context.commit('setMessage', msg)\r\n    } else {\r\n      context.commit('setMessage', err)\r\n    }\r\n  },\r\nasync updateFlight(context, payload) {\r\n  try {\r\n    console.log(\"Flight object: \", payload);\r\n    const res = await axios.put(`${bStoreURL}flight/${payload.ID}`, payload);\r\n    console.log(\"response - backend: \", res);\r\n    const { err, msg } = await res.data;\r\n    if (msg) {\r\n      context.dispatch('fetchFlights')\r\n      context.commit('setMessage', msg)\r\n    } else {\r\n      context.commit('setMessage', err)\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    context.commit('setMessage', 'Error updating flight');\r\n  }\r\n},\r\n  \r\n  \r\n  async deleteFlight(context, id) {\r\n    try {\r\n      const res = await axios.delete(`${bStoreURL}flight/${id}`);\r\n      const { err, msg } = await res.data;\r\n      if (msg) {\r\n        context.dispatch('fetchFlights');\r\n        context.commit('setMessage', msg);\r\n        // window.location.reload(); \r\n      } else {\r\n        context.commit('setMessage', err)\r\n      }\r\n    } catch (err) {\r\n      context.commit('setMessage', err.message);\r\n    }\r\n  },\r\n\r\n\r\n\r\n  // ---------------------------------Bookings----------------------------------------------\r\n\r\n\r\n \r\n  async bookFlight(context, payload){\r\n    try {\r\n      let statusCode  = null;\r\n      let message = null;\r\n\r\n      await axios.post(`${bStoreURL}user/${payload.ID}/booking`, payload)\r\n      .then((data)=> {\r\n        statusCode = data.status\r\n \r\n        message = data\r\n      })\r\n      .then(()=>{\r\n          console.log('Response: ', statusCode);           \r\n          context.commit('setMessage', message.data.msg);\r\n      });\r\n    }\r\n    catch(err) {\r\n      context.commit('setMessage', err);\r\n    }\r\n  },\r\n\r\n\r\n  async updateBooking(context, payload){\r\n    try{\r\n      let res = await axios.put(`${bStoreURL}user/${payload.ID}/cart/${payload.ID}`, {\r\n        quantity: payload.quantity\r\n      });\r\n      let {msg} = res.data;\r\n      if (res) {\r\n        console.log('Message: ', msg);\r\n        context.commit('setMessage', msg);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.error(err);\r\n    }\r\n  },\r\n\r\n  async retrieveBookings(context) {\r\n    let currentUser = JSON.parse(localStorage.getItem('user'));\r\n    try {  \r\n      const res = await axios.get(`${bStoreURL}user/${currentUser?.ID}/bookings`);\r\n      context.commit('SetBooking', res.data.results);\r\n    } catch(err) {\r\n      console.error(err);\r\n    }\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n\r\n},\r\n\r\n  getters: {\r\n    getUser: state => state.user,\r\n    getMessage: state => state.message,\r\n    getUsers: state => state.users,\r\n    getPrograms: state => state.programs,\r\n    getFlights: state => state.flights,\r\n    authenticated(state) {\r\n      return state.user !== null;\r\n    },\r\n    flights(state) {\r\n      return state.flights;\r\n    },\r\n    bookedFlights(state) {\r\n      return state.bookedFlights;\r\n    },\r\n    totalCost: state => {\r\n      let total = 0;\r\n      for (const flight of state.bookedFlights) {\r\n        total += flight.Price;\r\n      }\r\n      return total;\r\n    },\r\n  }\r\n  });\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}