{"ast":null,"code":"import Spinner from '../components/Spinner.vue';\nexport default {\n  name: 'UserCrudView',\n  components: {\n    Spinner\n  },\n  computed: {\n    users() {\n      return this.$store.state.users;\n    },\n    loading() {\n      return this.$store.state.loading;\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editingUser: false,\n      modalTitle: \"\",\n      modalAction: \"\",\n      form: {\n        FirstName: \"\",\n        LastName: \"\",\n        Email: \"\",\n        UserPassword: \"\",\n        Address: \"\",\n        PhoneNumber: \"\",\n        userRole: \"\"\n      }\n    };\n  },\n  created() {\n    this.$store.commit('setLoading', true); //  True will show the spinner\n    this.$store.dispatch('retrieveUsers').then(() => {\n      this.$store.commit('setLoading', false); // False will hide the spinner after the programs are fetched\n    });\n  },\n\n  methods: {\n    showAddModal() {\n      this.modalTitle = \"Add User\";\n      this.modalAction = \"Add\";\n      this.form = {\n        FirstName: \"\",\n        LastName: \"\",\n        Email: \"\",\n        UserPassword: \"\",\n        Address: \"\",\n        PhoneNumber: \"\",\n        userRole: \"\"\n      };\n      this.showModal = true;\n    },\n    showEditModal(user) {\n      this.modalTitle = \"Edit User\";\n      this.modalAction = \"Update\";\n      this.form = {\n        ...user\n      };\n      this.editingUser = true;\n      this.showModal = true;\n    },\n    submitForm() {\n      if (this.modalAction === \"Add\") {\n        this.$store.dispatch(\"register\", this.form);\n      } else if (this.modalAction === \"Update\") {\n        this.$store.dispatch(\"updateUser\", this.form);\n      }\n      this.showModal = false;\n      this.editingUser = false;\n    },\n    cancelForm() {\n      this.showModal = false;\n    },\n    deleteUser(user) {\n      console.log(user); // Add this line\n      if (confirm(\"Are you sure you want to delete this program?\")) {\n        if (user.ID) {\n          console.log('User: ', user.ID);\n          this.$store.dispatch(\"deleteUser\", user.ID).then(() => {\n            // handle success\n            console.log(\"Program deleted successfully\");\n            // window.location.reload();\n          }).catch(err => {\n            // handle error\n            console.error(err);\n          });\n        } else {\n          console.error(\"Invalid program ID\");\n        }\n      }\n    },\n    updateUser(user) {\n      console.log('User: ', user.ID);\n      if (user.ID) {\n        this.$store.dispatch(\"updateUser\", user.ID).then(() => {\n          console.log(\"User updated successfully\");\n        }).catch(err => {\n          console.error(err);\n        });\n      } else {\n        console.error(\"Invalid user ID\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["Spinner","name","components","computed","users","$store","state","loading","data","showModal","editingUser","modalTitle","modalAction","form","FirstName","LastName","Email","UserPassword","Address","PhoneNumber","userRole","created","commit","dispatch","then","methods","showAddModal","showEditModal","user","submitForm","cancelForm","deleteUser","console","log","confirm","ID","catch","err","error","updateUser"],"sources":["C:\\Users\\Thabang\\BookingAir\\ui\\src\\views\\UserCrudView.vue"],"sourcesContent":["<template>\r\n  <div class=\"body\">\r\n    <h1>Users</h1>\r\n    <div v-if=\"loading\">\r\n      <Spinner />\r\n    </div>\r\n    <div v-else>\r\n      <table class=\"table m-auto\">\r\n        <colgroup>\r\n          <col span=\"3\">\r\n          <col class=\"hide\" span=\"1\">\r\n        </colgroup>\r\n        <thead>\r\n          <tr class=\"program\">\r\n            <th>FirstName</th>\r\n            <th>LastName</th>\r\n            <th>Email</th>\r\n            <th>UserPassword</th>\r\n            <th>Address</th>\r\n            <th>PhoneNumber</th>\r\n            <th>userRole</th>\r\n\r\n            <th><button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\r\n                @click=\"showAddModal\">Add User</button></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr class=\"program\" v-for=\"user in users\" :key=\"user.id\">\r\n            <td data-label=\"FirstName\">{{ user.FirstName }}</td>\r\n            <td data-label=\"LastName\">{{ user.LastName }}</td>\r\n            <td data-label=\"Email\">{{ user.Email }}</td>\r\n            <td data-label=\"UserPassword\">{{ user.UserPassword }}</td>\r\n            <td data-label=\"Address\">{{ user.Address }}</td>\r\n            <td data-label=\"PhoneNumber\">{{ user.PhoneNumber }}</td>\r\n            <td data-label=\"userRole\">{{ user.userRole }}</td>\r\n            <td>\r\n              <button @click=\"showEditModal(user)\">Edit</button>\r\n              <button @click=\"deleteUser(user)\">Delete</button>\r\n              <!-- Add Program Modal -->\r\n              <div class=\"modal\" tabindex=\"-1\" role=\"dialog\" :class=\"{ 'd-block': showModal }\">\r\n                <div class=\"modal-dialog\" role=\"document\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">{{ modalTitle }}</h1>\r\n                      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"\r\n                        @click=\"cancelForm\"></button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                      <form @submit.prevent=\"submitForm\">\r\n                        <div class=\"mb-3\">\r\n                          <label for=\"FirstName\" class=\"form-label\">FirstName:</label>\r\n                          <input id=\"FirstName\" v-model=\"form.FirstName\" required class=\"form-control\" />\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                          <label for=\"LastName\" class=\"form-label\">LastName:</label>\r\n                          <input id=\"LastName\" v-model=\"form.LastName\" required class=\"form-control\" />\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                          <label for=\"Email\" class=\"form-label\">Email:</label>\r\n                          <input id=\"Email\" v-model=\"form.Email\" required class=\"form-control\" />\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                          <label for=\"UserPassword\" class=\"form-label\">UserPassword:</label>\r\n                          <textarea id=\"UserPassword\" v-model=\"form.UserPassword\" required\r\n                            class=\"form-control\"></textarea>\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                          <label for=\"Address\" class=\"form-label\">Address:</label>\r\n                          <textarea id=\"Address\" v-model=\"form.Address\" required class=\"form-control\"></textarea>\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                          <label for=\"PhoneNumber\" class=\"form-label\">PhoneNumber:</label>\r\n                          <textarea id=\"PhoneNumber\" v-model=\"form.PhoneNumber\" required class=\"form-control\"></textarea>\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                          <label for=\"userRole\" class=\"form-label\">userRole:</label>\r\n                          <textarea id=\"userRole\" v-model=\"form.userRole\" required class=\"form-control\"></textarea>\r\n                        </div>\r\n\r\n                        <div class=\"modal-footer\">\r\n                          <button v-if=\"!editingUser\" @click=\"showModal()\">Add</button>\r\n                          <button @click=\"updateUser(user)\">Edit</button>\r\n                          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\"\r\n                            @click=\"cancelForm\">Cancel</button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Spinner from '../components/Spinner.vue'\r\nexport default {\r\n  name: 'UserCrudView',\r\n  components: {\r\n    Spinner\r\n  },\r\n  computed: {\r\n    users() {\r\n      return this.$store.state.users;\r\n    },\r\n    loading() {\r\n      return this.$store.state.loading;\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      showModal: false,\r\n      editingUser: false,\r\n      modalTitle: \"\",\r\n      modalAction: \"\",\r\n      form: {\r\n        FirstName: \"\",\r\n        LastName: \"\",\r\n        Email: \"\",\r\n        UserPassword: \"\",\r\n        Address: \"\",\r\n        PhoneNumber: \"\",\r\n        userRole: \"\",\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.$store.commit('setLoading', true); //  True will show the spinner\r\n    this.$store.dispatch('retrieveUsers').then(() => {\r\n      this.$store.commit('setLoading', false); // False will hide the spinner after the programs are fetched\r\n    });\r\n  },\r\n  methods: {\r\n    showAddModal() {\r\n      this.modalTitle = \"Add User\";\r\n      this.modalAction = \"Add\";\r\n      this.form = {\r\n        FirstName: \"\",\r\n        LastName: \"\",\r\n        Email: \"\",\r\n        UserPassword: \"\",\r\n        Address: \"\",\r\n        PhoneNumber: \"\",\r\n        userRole: \"\",\r\n      };\r\n      this.showModal = true;\r\n    },\r\n\r\n    showEditModal(user) {\r\n      this.modalTitle = \"Edit User\";\r\n      this.modalAction = \"Update\";\r\n      this.form = { ...user };\r\n      this.editingUser = true;\r\n      this.showModal = true;\r\n    },\r\n\r\n    submitForm() {\r\n      if (this.modalAction === \"Add\") {\r\n        this.$store.dispatch(\"register\", this.form);\r\n      } else if (this.modalAction === \"Update\") {\r\n        this.$store.dispatch(\"updateUser\", this.form);\r\n      }\r\n      this.showModal = false;\r\n      this.editingUser = false;\r\n    },\r\n\r\n    cancelForm() {\r\n      this.showModal = false;\r\n    },\r\n    deleteUser(user) {\r\n      console.log(user); // Add this line\r\n      if (confirm(\"Are you sure you want to delete this program?\")) {\r\n        if (user.ID) {\r\n          console.log('User: ', user.ID);\r\n          this.$store.dispatch(\"deleteUser\", user.ID).then(() => {\r\n            // handle success\r\n            console.log(\"Program deleted successfully\");\r\n            // window.location.reload();\r\n          }).catch(err => {\r\n            // handle error\r\n            console.error(err);\r\n          });\r\n        } else {\r\n          console.error(\"Invalid program ID\");\r\n        }\r\n      }\r\n    },\r\n    updateUser(user) {\r\n      console.log('User: ', user.ID);\r\n      if (user.ID) {\r\n        this.$store.dispatch(\"updateUser\", user.ID).then(() => {\r\n          console.log(\"User updated successfully\");\r\n        })\r\n          .catch(err => {\r\n            console.error(err);\r\n          });\r\n      } else {\r\n        console.error(\"Invalid user ID\");\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n.body{\r\n\tmargin:0;\r\n\tpadding:20px;\r\n  background: radial-gradient(circle, rgba(248, 248, 248, 1) 0%, rgb(193, 210, 232) 100%);\r\n  font-family: 'Black Mango Medium';\r\n}\r\n.hide {\r\n  visibility: collapse;\r\n}\r\n\r\n*{\r\n\tbox-sizing: border-box;\r\n}\r\nimg {\r\n  width: 250px;\r\n}\r\n\r\nh1 {\r\n  margin-bottom: 30px;\r\n    font-size: 4rem;\r\n    padding-top: 30px;\r\n    color: rgb(27, 61, 102);\r\n    text-align: center;\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.table td, .table th {\r\n    padding: 12px 15px;\r\n    border: 1px solid rgb(27, 61, 102);\r\n    text-align: center;\r\n    font-size: 16px;\r\n  font-weight: bold;\r\n  margin: 0;\r\n  letter-spacing: 0.1rem;\r\n  color: black;\r\n}\r\n\r\n.table th {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin: 0;\r\n  letter-spacing: 0.1rem;\r\n  color: black;\r\n}\r\n\r\n\r\nbutton {\r\n  background-color: rgb(27, 61, 102);\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  margin: 5px;\r\n  padding: 0.5rem 1rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.program {\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.program:hover {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n@media(max-width: 946px){\r\n\t.table thead{\r\n\t\tdisplay: none;\r\n\t}\r\n\r\n\t.table, .table tbody, .table .program, .table td{\r\n\t\tdisplay: block;\r\n\t\twidth: 100%;\r\n\t}\r\n\t.table .program{\r\n\t\tmargin-bottom:15px;\r\n\t}\r\n\t.table td{\r\n\t\ttext-align: right;\r\n\t\t/* padding-left: 50%; */\r\n\t\ttext-align: right;\r\n\t\tposition: relative;\r\n    width: 100%;\r\n\t}\r\n  .table td::before {\r\n    content: attr(data-label);\r\n    position: absolute;\r\n    left: 0;\r\n    width: 50%;\r\n    padding-left: 15px;\r\n    font-size: 15px;\r\n    font-weight: bold;\r\n    text-align: left;\r\n}\r\n  img {\r\n  width: 50px;\r\n}\r\n}\r\n</style>"],"mappings":"AAmGA,OAAOA,OAAM,MAAO,2BAA0B;AAC9C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,QAAQ,EAAE;IACRC,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,KAAK;IAChC,CAAC;IACDG,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,OAAO;IAClC;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE,KAAK;MAClBC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE;QACJC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,YAAY,EAAE,EAAE;QAChBC,OAAO,EAAE,EAAE;QACXC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAAChB,MAAM,CAACiB,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE;IACxC,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,eAAe,CAAC,CAACC,IAAI,CAAC,MAAM;MAC/C,IAAI,CAACnB,MAAM,CAACiB,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC,EAAE;IAC3C,CAAC,CAAC;EACJ,CAAC;;EACDG,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACf,UAAS,GAAI,UAAU;MAC5B,IAAI,CAACC,WAAU,GAAI,KAAK;MACxB,IAAI,CAACC,IAAG,GAAI;QACVC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,YAAY,EAAE,EAAE;QAChBC,OAAO,EAAE,EAAE;QACXC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE;MACZ,CAAC;MACD,IAAI,CAACX,SAAQ,GAAI,IAAI;IACvB,CAAC;IAEDkB,aAAaA,CAACC,IAAI,EAAE;MAClB,IAAI,CAACjB,UAAS,GAAI,WAAW;MAC7B,IAAI,CAACC,WAAU,GAAI,QAAQ;MAC3B,IAAI,CAACC,IAAG,GAAI;QAAE,GAAGe;MAAK,CAAC;MACvB,IAAI,CAAClB,WAAU,GAAI,IAAI;MACvB,IAAI,CAACD,SAAQ,GAAI,IAAI;IACvB,CAAC;IAEDoB,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACjB,WAAU,KAAM,KAAK,EAAE;QAC9B,IAAI,CAACP,MAAM,CAACkB,QAAQ,CAAC,UAAU,EAAE,IAAI,CAACV,IAAI,CAAC;MAC7C,OAAO,IAAI,IAAI,CAACD,WAAU,KAAM,QAAQ,EAAE;QACxC,IAAI,CAACP,MAAM,CAACkB,QAAQ,CAAC,YAAY,EAAE,IAAI,CAACV,IAAI,CAAC;MAC/C;MACA,IAAI,CAACJ,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACC,WAAU,GAAI,KAAK;IAC1B,CAAC;IAEDoB,UAAUA,CAAA,EAAG;MACX,IAAI,CAACrB,SAAQ,GAAI,KAAK;IACxB,CAAC;IACDsB,UAAUA,CAACH,IAAI,EAAE;MACfI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC,EAAE;MACnB,IAAIM,OAAO,CAAC,+CAA+C,CAAC,EAAE;QAC5D,IAAIN,IAAI,CAACO,EAAE,EAAE;UACXH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEL,IAAI,CAACO,EAAE,CAAC;UAC9B,IAAI,CAAC9B,MAAM,CAACkB,QAAQ,CAAC,YAAY,EAAEK,IAAI,CAACO,EAAE,CAAC,CAACX,IAAI,CAAC,MAAM;YACrD;YACAQ,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;YAC3C;UACF,CAAC,CAAC,CAACG,KAAK,CAACC,GAAE,IAAK;YACd;YACAL,OAAO,CAACM,KAAK,CAACD,GAAG,CAAC;UACpB,CAAC,CAAC;QACJ,OAAO;UACLL,OAAO,CAACM,KAAK,CAAC,oBAAoB,CAAC;QACrC;MACF;IACF,CAAC;IACDC,UAAUA,CAACX,IAAI,EAAE;MACfI,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEL,IAAI,CAACO,EAAE,CAAC;MAC9B,IAAIP,IAAI,CAACO,EAAE,EAAE;QACX,IAAI,CAAC9B,MAAM,CAACkB,QAAQ,CAAC,YAAY,EAAEK,IAAI,CAACO,EAAE,CAAC,CAACX,IAAI,CAAC,MAAM;UACrDQ,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QAC1C,CAAC,EACEG,KAAK,CAACC,GAAE,IAAK;UACZL,OAAO,CAACM,KAAK,CAACD,GAAG,CAAC;QACpB,CAAC,CAAC;MACN,OAAO;QACLL,OAAO,CAACM,KAAK,CAAC,iBAAiB,CAAC;MAClC;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}